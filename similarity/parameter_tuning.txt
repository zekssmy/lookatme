# this is just incase you want to see which value for k might be the best 
sse = []
list_k = list(range(3, 50))

for k in list_k:
    km = KMeans(n_clusters = k, random_state = 22)
    km.fit(x)
    
    sse.append(km.inertia_)
    
    
# Plot sse against k
plt.figure(figsize = (6, 6))
plt.plot(list_k, sse)
plt.xlabel(r'Number of clusters *k*')
plt.ylabel('Sum of squared distance');